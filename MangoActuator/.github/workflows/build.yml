name: Build Executable with PyInstaller

on:
  push:
    branches: [test]  # 只在 test 分支有推送时触发
    paths:
      - 'MangoActuator/src/settings/**'  # 只监控 settings 目录的更改
  workflow_dispatch:  # 仍然允许手动触发

jobs:
  build-windows:
    # 添加条件判断，只有特定路径有修改时才运行
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.modified, 'MangoActuator/src/settings/') ||
      contains(github.event.head_commit.added, 'MangoActuator/src/settings/') ||
      contains(github.event.head_commit.removed, 'MangoActuator/src/settings/') 

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: test  # 确保检出的是 test 分支

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install mango uiautomator2

    - name: Create directories
      run: |
        mkdir -p MangoActuator/src/settings
        mkdir -p mangos
        mkdir -p uiautomator2/assets

    - name: Build executable
      run: |
        cd MangoActuator  # 进入项目目录
        pyinstaller `
          --name "执行器" `
          --onefile `
          --noconsole `
          --icon "../app_icon.ico" `
          --add-data "src/settings/settings.json;src/settings" `
          --add-data "src/settings/menus.json;src/settings" `
          --add-data "src/settings/menus_2.json;src/settings" `
          --add-data "../Lib/site-packages/mangotools/mangos;mangos" `
          --add-data "../Lib/site-packages/uiautomator2/assets/u2.jar;uiautomator2/assets" `
          --add-data "../Lib/site-packages/uiautomator2/assets/app-uiautomator.apk;uiautomator2/assets" `
          --hidden-import "mango" `
          --hidden-import "uiautomator2" `
          --clean `
          --noconfirm `
          --hidden-import "email.mime.text" `
          --hidden-import "email.mime.base" `
          --hidden-import "email.mime.multipart" `
          main.py

    - name: Upload executable artifact
      uses: actions/upload-artifact@v3
      with:
        name: 执行器-windows-${{ github.run_number }}
        path: MangoActuator/dist/执行器.exe

    - name: Show build info
      run: |
        echo "构建完成！"
        echo "触发原因: ${{ github.event_name }}"
        echo "分支: ${{ github.ref }}"
        echo "提交信息: ${{ github.event.head_commit.message }}"